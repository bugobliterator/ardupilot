# hw definition file for processing by chibios_hwdef.py
# for H757

# MCU class and specific type
MCU STM32H7xx STM32H757xx


# USB setup
USB_STRING_MANUFACTURER "ArduPilot"
USB_STRING_PRODUCT "%BOARD%"

define CORE_CM7
define SMPS_PWR

define WATCHDOG_DISABLED

# crystal frequency
OSCILLATOR_HZ 25000000

# board ID for firmware load
APJ_BOARD_ID 146

FLASH_SIZE_KB 2048

# setup build for a peripheral firmware
env AP_PERIPH 1
env AP_PERIPH_HEAVY 1

define HAL_BUILD_AP_PERIPH
define HAL_GCS_ENABLED 1

# bootloader is installed at zero offset
FLASH_RESERVE_START_KB 128

define HAL_LED_ON 1

PK3 LED OUTPUT LOW
PK4 LED_BOOTLOADER OUTPUT
PK5 LED_ACTIVITY OUTPUT

PB15 USART1_RX USART1
PB14 USART1_TX USART1

PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# the first CAN bus
PA11 CAN1_RX CAN1
PA12 CAN1_TX CAN1
# PC8 GPIO CAN_SLEEP OUTPUT LOW

# PA11 OTG_FS_DM OTG1
# PA12 OTG_FS_DP OTG1

# order of UARTs (and USB)
SERIAL_ORDER USART1

define HAL_USE_EMPTY_STORAGE 1
define HAL_STORAGE_SIZE 16384


# no ADC driver
define HAL_USE_ADC FALSE
define STM32_ADC_USE_ADC1 FALSE
define HAL_DISABLE_ADC_DRIVER TRUE

# avoid timer and RCIN threads to save memory
define HAL_NO_RCIN_THREAD
define HAL_NO_GPIO_IRQ
define DISABLE_SERIAL_ESC_COMM TRUE

PB13 VBUS INPUT OPENDRAIN

# QSPI Flash
# we only declare this so that initialisation 
# doesn't reset these pins
PF8 QUADSPI_BK1_IO0 QUADSPI1
PF9 QUADSPI_BK1_IO1 QUADSPI1
PF7 QUADSPI_BK1_IO2 QUADSPI1
PF6 QUADSPI_BK1_IO3 QUADSPI1
PG6 QUADSPI_BK1_NCS QUADSPI1
PB2 QUADSPI_CLK QUADSPI1

# Ethernet
PG11 ETH_RMII_TX_EN  ETH1
PG13 ETH_RMII_TXD0   ETH1
PG12 ETH_RMII_TXD1   ETH1
PC4  ETH_RMII_RXD0   ETH1
PC5  ETH_RMII_RXD1   ETH1
PA7  ETH_RMII_CRS_DV ETH1
PC1  ETH_MDC         ETH1
PA2  ETH_MDIO        ETH1
PA1  ETH_RMII_REF_CLK    ETH1

define BOARD_PHY_ID  MII_LAN8742A_ID
define BOARD_PHY_RMII

###################
# IP Configuration
define LWIP_DHCP 1

# static IP for when LWIP_DHCP == 0. 
# **NOTE** Use commas instead of periods
define LWIP_IPADDR(p)   IP4_ADDR(p, 172,20,13,92)
define LWIP_GATEWAY(p)  IP4_ADDR(p, 172,20,1,1)
define LWIP_NETMASK(p)  IP4_ADDR(p, 255,255,0,0)
###################

# use DNA
define HAL_CAN_DEFAULT_NODE_ID 0

define CAN_APP_NODE_NAME "org.cubepilot.H757"

# EXTERNAL_PROG_FLASH_MB 32

# Now setup the pins for the microSD card, if available.
PC8 SDMMC1_D0 SDMMC1
PC9 SDMMC1_D1 SDMMC1
PC10 SDMMC1_D2 SDMMC1
PC11 SDMMC1_D3 SDMMC1
PC12 SDMMC1_CK SDMMC1
PD2 SDMMC1_CMD SDMMC1

define SCRIPTING_HEAP_SIZE (128*1024)

define HAL_OS_FATFS_IO 1

ROMFS lua_modules/headers.lua libraries/AP_Scripting/modules/headers.lua
ROMFS lua_modules/ltn12.lua libraries/AP_Scripting/modules/ltn12.lua
ROMFS lua_modules/mbox.lua libraries/AP_Scripting/modules/mbox.lua
ROMFS lua_modules/mime.lua libraries/AP_Scripting/modules/mime.lua
ROMFS lua_modules/socket.lua libraries/AP_Scripting/modules/socket.lua
ROMFS lua_modules/socket/ftp.lua libraries/AP_Scripting/modules/socket/ftp.lua
ROMFS lua_modules/socket/http.lua libraries/AP_Scripting/modules/socket/http.lua
ROMFS lua_modules/socket/smtp.lua libraries/AP_Scripting/modules/socket/smtp.lua
ROMFS lua_modules/socket/tp.lua libraries/AP_Scripting/modules/socket/tp.lua
ROMFS lua_modules/socket/url.lua libraries/AP_Scripting/modules/socket/url.lua
ROMFS lua_modules/socket/headers.lua libraries/AP_Scripting/modules/socket/headers.lua
